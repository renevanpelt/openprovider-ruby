=begin
#REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.30
=end

require 'spec_helper'
require 'json'

# Unit tests for OpenProvider::NsGroupServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NsGroupServiceApi' do
  before do
    # run before each test
    @instance = OpenProvider::NsGroupServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NsGroupServiceApi' do
    it 'should create an instance of NsGroupServiceApi' do
      expect(@instance).to be_instance_of(OpenProvider::NsGroupServiceApi)
    end
  end

  # unit tests for create_group
  # Create group
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [NsGroupCreateGroupResponse]
  describe 'create_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_group
  # Delete group
  # @param ns_group Plain text name of the nameserver group, which can consist of several nameservers with attached IPs. Once created in Openprovider reseller account, nameserver group can be reused for operations with domains.
  # @param [Hash] opts the optional parameters
  # @return [NsGroupGroupBoolResponse]
  describe 'delete_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_group
  # Get group
  # @param ns_group Plain text name of the nameserver group, which can consist of several nameservers with attached IPs. Once created in Openprovider reseller account, nameserver group can be reused for operations with domains.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id Nameserver group ID.
  # @return [NsGroupGetGroupResponse]
  describe 'get_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_groups
  # List groups
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Limits the number of objects in the output.
  # @option opts [Integer] :offset Used to retrieve all objects from a certain offset up to the limit. (default value: 0).
  # @option opts [String] :order_by_ns_group Sorting type (asc/desc).
  # @option opts [String] :order_by_domain_count Sorting type (asc/desc).
  # @option opts [String] :order_by_ns_count Sorting type (asc/desc).
  # @option opts [BOOLEAN] :with_domain_count Indicates if number of domains associated with the NS group should be returned.
  # @option opts [BOOLEAN] :with_ns_count Indicates if number of nameservers associated with the NS group should be returned.
  # @option opts [String] :ns_group_pattern NS group name pattern. Wildcard (*) can be used.
  # @option opts [String] :ns_name_pattern Nameserver name pattern. Wildcard (*) can be used.
  # @option opts [String] :ns_ip_pattern Nameserver IP address pattern. Wildcard (*) can be used.
  # @return [NsGroupListGroupsResponse]
  describe 'list_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group
  # Update group
  # @param body 
  # @param ns_group Plain text name of the nameserver group, which can consist of several nameservers with attached IPs. Once created in Openprovider reseller account, nameserver group can be reused for operations with domains.
  # @param [Hash] opts the optional parameters
  # @return [NsGroupGroupBoolResponse]
  describe 'update_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
