=begin
#REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.30
=end

require 'spec_helper'
require 'json'

# Unit tests for OpenProvider::NameserverServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NameserverServiceApi' do
  before do
    # run before each test
    @instance = OpenProvider::NameserverServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NameserverServiceApi' do
    it 'should create an instance of NameserverServiceApi' do
      expect(@instance).to be_instance_of(OpenProvider::NameserverServiceApi)
    end
  end

  # unit tests for create_nameserver
  # Create nameserver
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [NameserverCreateNameserverResponse]
  describe 'create_nameserver test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_nameserver
  # Delete nameserver
  # @param name Nameserver name
  # @param [Hash] opts the optional parameters
  # @return [NameserverNameserverBoolResponse]
  describe 'delete_nameserver test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_nameserver
  # Get nameserver
  # @param name Nameserver name
  # @param [Hash] opts the optional parameters
  # @return [NameserverGetNameserverResponse]
  describe 'get_nameserver test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_nameservers
  # List nameservers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Nameserver name.
  # @option opts [String] :ip Nameserver IP.
  # @option opts [String] :ip6 Nameserver IPv6.
  # @option opts [String] :pattern Nameserver name search pattern. Wildcatd (*) can be used.
  # @option opts [Integer] :limit Limits the number of objects in the output.
  # @option opts [String] :offset Used to retrieve all objects from a certain offset up to the limit.
  # @option opts [String] :order Sorting type (asc/desc).
  # @option opts [String] :order_by Field for sorting output. Possible values: id, name.
  # @return [NameserverListNameserversResponse]
  describe 'list_nameservers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_nameserver
  # Update nameserver
  # @param body 
  # @param name Nameserver name
  # @param [Hash] opts the optional parameters
  # @return [NameserverNameserverBoolResponse]
  describe 'update_nameserver test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
