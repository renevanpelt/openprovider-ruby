=begin
#REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0-beta

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.30
=end

require 'spec_helper'
require 'json'

# Unit tests for OpenProvider::DomainServiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DomainServiceApi' do
  before do
    # run before each test
    @instance = OpenProvider::DomainServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DomainServiceApi' do
    it 'should create an instance of DomainServiceApi' do
      expect(@instance).to be_instance_of(OpenProvider::DomainServiceApi)
    end
  end

  # unit tests for approve_transfer
  # Approve transfer
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [ResponseBoolResponse]
  describe 'approve_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for check_domain
  # Check domain
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [DomainCheckDomainResponse]
  describe 'check_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_domain
  # Create domain
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [DomainCreateDomainResponse]
  describe 'create_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_domain
  # Delete domain
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @option opts [String] :domain_name Domain name without extension.
  # @option opts [String] :domain_extension Domain extension.
  # @option opts [String] :type Type of deletion request.
  # @option opts [BOOLEAN] :skip_soft_quarantine Deletes domain, skipping the soft quarantine.
  # @option opts [BOOLEAN] :force_delete Force delete domain even if it has glue records.
  # @return [DomainDeleteDomainResponse]
  describe 'delete_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_domain
  # Get domain
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @option opts [String] :domain_name Domain name without extension.
  # @option opts [String] :domain_extension Domain extension.
  # @option opts [BOOLEAN] :with_history Returns domain mutations history.
  # @option opts [BOOLEAN] :with_api_history Returns domain API calls history.
  # @option opts [BOOLEAN] :with_additional_data Returns domain additional data.
  # @option opts [BOOLEAN] :with_verification_email Returns information about domain owner email verification status.
  # @option opts [BOOLEAN] :with_abuse_details Returns domain abuse details.
  # @option opts [BOOLEAN] :with_whois_privacy_data Returns WPP data.
  # @option opts [BOOLEAN] :with_registry_statuses Indicates, if registry EPP statuses should be retrieved.
  # @option opts [BOOLEAN] :is_deleted Indicates whether object is deleted.
  # @return [DomainGetDomainResponse]
  describe 'get_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_domains
  # List domains
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order_by_id Domain id number.
  # @option opts [String] :order_by_domain_name The domain name.
  # @option opts [String] :order_by_domain_extension Domain extension.
  # @option opts [String] :order_by_order_date The order date.
  # @option opts [String] :order_by_active_date The active date.
  # @option opts [String] :order_by_expiration_date Domain expiration date.
  # @option opts [String] :order_by_renewal_date Date on which domain will be renewed.
  # @option opts [String] :order_by_status Domain status.
  # @option opts [String] :order_by_transfer_date The transfer date.
  # @option opts [Integer] :limit The limit.
  # @option opts [Integer] :offset The offset.
  # @option opts [Integer] :id Domain id number.
  # @option opts [String] :extension Domain extension.
  # @option opts [String] :renewal_date Date on which domain will be renewed.
  # @option opts [String] :full_name Full name of the domain.
  # @option opts [String] :domain_name_pattern The domain name pattern.
  # @option opts [String] :ns_group_pattern Nameserver group name pattern.
  # @option opts [String] :status Domain status.
  # @option opts [Array<String>] :status_not_equal Array of domain statuses to exclude.
  # @option opts [String] :queue_status The queue status.
  # @option opts [String] :contact_handle Handle to filter by.
  # @option opts [String] :comment_pattern The comment pattern.
  # @option opts [BOOLEAN] :with_history With history.
  # @option opts [BOOLEAN] :with_api_history With api history.
  # @option opts [BOOLEAN] :with_additional_data With additional data.
  # @option opts [String] :application_mode When new gTLD is started it gets through several phases before it becomes available for registration to everybody (General availability or GA). There are several phases before GA when it is still possible to apply for a domain, but with some restrictions.
  # @option opts [BOOLEAN] :with_verification_email Returns information about domain owner email verification status.
  # @option opts [BOOLEAN] :with_registry_statuses Indicates, if registry EPP statuses should be retrieved.
  # @option opts [String] :response_type The type.
  # @option opts [String] :response_to The to.
  # @option opts [BOOLEAN] :is_deleted Indicates whether object is deleted.
  # @return [DomainListDomainsResponse]
  describe 'list_domains test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renew_domain
  # Renew domain
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [DomainRenewDomainResponse]
  describe 'renew_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_domain
  # Restore domain
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [DomainRestoreDomainResponse]
  describe 'restore_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_foa1
  # Send foa1
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [ResponseBoolResponse]
  describe 'send_foa1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for suggest_name_domain
  # Suggest name domain
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [DomainSuggestNameDomainResponse]
  describe 'suggest_name_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trade_domain
  # Trade domain
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [DomainTradeDomainResponse]
  describe 'trade_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transfer_domain
  # Transfer domain
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [DomainTransferDomainResponse]
  describe 'transfer_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for try_again_last_operation
  # Try again last operation
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [ResponseBoolResponse]
  describe 'try_again_last_operation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_domain
  # Update domain
  # @param body 
  # @param id Domain id number
  # @param [Hash] opts the optional parameters
  # @return [DomainUpdateDomainResponse]
  describe 'update_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
